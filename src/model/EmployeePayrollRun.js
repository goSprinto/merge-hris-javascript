/**
 * Merge HRIS API
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Deduction from './Deduction';
import Earning from './Earning';
import Employee from './Employee';
import PayrollRun from './PayrollRun';
import RemoteData from './RemoteData';
import Tax from './Tax';

/**
 * The EmployeePayrollRun model module.
 * @module model/EmployeePayrollRun
 * @version 1.0
 */
class EmployeePayrollRun {
    /**
     * Constructs a new <code>EmployeePayrollRun</code>.
     * # The EmployeePayrollRun Object ### Description The &#x60;EmployeePayrollRun&#x60; object is used to represent a payroll run for a specific employee.  ### Usage Example Fetch from the &#x60;LIST EmployeePayrollRun&#x60; endpoint and filter by &#x60;ID&#x60; to show all employee payroll runs.
     * @alias module:model/EmployeePayrollRun
     */
    constructor() { 
        
        EmployeePayrollRun.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EmployeePayrollRun</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmployeePayrollRun} obj Optional instance to populate.
     * @return {module:model/EmployeePayrollRun} The populated <code>EmployeePayrollRun</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmployeePayrollRun();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('remote_id')) {
                obj['remote_id'] = ApiClient.convertToType(data['remote_id'], 'String');
            }
            if (data.hasOwnProperty('employee')) {
                obj['employee'] = convertRelatedObjectToType(data['employee'], Employee);
            }
            if (data.hasOwnProperty('payroll_run')) {
                obj['payroll_run'] = convertRelatedObjectToType(data['payroll_run'], PayrollRun);
            }
            if (data.hasOwnProperty('gross_pay')) {
                obj['gross_pay'] = ApiClient.convertToType(data['gross_pay'], 'Number');
            }
            if (data.hasOwnProperty('net_pay')) {
                obj['net_pay'] = ApiClient.convertToType(data['net_pay'], 'Number');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
            }
            if (data.hasOwnProperty('check_date')) {
                obj['check_date'] = ApiClient.convertToType(data['check_date'], 'Date');
            }
            if (data.hasOwnProperty('earnings')) {
                obj['earnings'] = ApiClient.convertToType(data['earnings'], [Earning]);
            }
            if (data.hasOwnProperty('deductions')) {
                obj['deductions'] = ApiClient.convertToType(data['deductions'], [Deduction]);
            }
            if (data.hasOwnProperty('taxes')) {
                obj['taxes'] = ApiClient.convertToType(data['taxes'], [Tax]);
            }
            if (data.hasOwnProperty('remote_data')) {
                obj['remote_data'] = ApiClient.convertToType(data['remote_data'], [RemoteData]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
EmployeePayrollRun.prototype['id'] = undefined;

/**
 * The third-party API ID of the matching object.
 * @member {String} remote_id
 */
EmployeePayrollRun.prototype['remote_id'] = undefined;

/**
 * The employee whose payroll is being run.
 * @member {String} employee
 */
EmployeePayrollRun.prototype['employee'] = undefined;

/**
 * The payroll being run.
 * @member {String} payroll_run
 */
EmployeePayrollRun.prototype['payroll_run'] = undefined;

/**
 * The gross pay from the run.
 * @member {Number} gross_pay
 */
EmployeePayrollRun.prototype['gross_pay'] = undefined;

/**
 * The net pay from the run.
 * @member {Number} net_pay
 */
EmployeePayrollRun.prototype['net_pay'] = undefined;

/**
 * The day and time the payroll run started.
 * @member {Date} start_date
 */
EmployeePayrollRun.prototype['start_date'] = undefined;

/**
 * The day and time the payroll run ended.
 * @member {Date} end_date
 */
EmployeePayrollRun.prototype['end_date'] = undefined;

/**
 * The day and time the payroll run was checked.
 * @member {Date} check_date
 */
EmployeePayrollRun.prototype['check_date'] = undefined;

/**
 * @member {Array.<module:model/Earning>} earnings
 */
EmployeePayrollRun.prototype['earnings'] = undefined;

/**
 * @member {Array.<module:model/Deduction>} deductions
 */
EmployeePayrollRun.prototype['deductions'] = undefined;

/**
 * @member {Array.<module:model/Tax>} taxes
 */
EmployeePayrollRun.prototype['taxes'] = undefined;

/**
 * @member {Array.<module:model/RemoteData>} remote_data
 */
EmployeePayrollRun.prototype['remote_data'] = undefined;






export default EmployeePayrollRun;

